{"version":3,"sources":["components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","redux/profileReducer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Setting/Setting.tsx","redux/dialogsReducer.tsx","components/Dialogs/DialogItems/DialogItem.tsx","components/Dialogs/Messages/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","reportWebVitals.ts","redux/sidebarReducer.tsx","redux/redux-store.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Header","props","className","hed","header","src","alt","title","Navbar","classes","nav","item","to","activeClassName","active","initialState","postData","id","message","likeCount","newPostText","profileData","background","ava","Post","post","MyPosts","postElement","posts","map","p","newPostElement","React","createRef","mypost","block","area","ref","value","onChange","e","updatePostTextActionCreator","currentTarget","onClick","text","current","addPost","MyPostsContainer","state","store","getState","profilePage","body","dispatch","type","newText","postMessage","addPostActionCreator","ProfileInfo","content","Profile","Music","News","Setting","dialogsData","name","messagesData","newMessageBody","DialogItem","d","dialog","Message","mes","Dialogs","dialogsElements","messageElements","m","dialogs","dialogsItems","messageItems","placeholder","updateNewMessageBodyCreator","sendMessageCreator","DialogsContainer","dialogsPage","App","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newPost","push","sidebarPage","createStore","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.48c27768.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2IiT1\",\"title\":\"Header_title__1PnPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"MyPosts_block__1KfWR\",\"area\":\"MyPosts_area__3QX9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1drbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1ydn2\"};","import React from 'react';\r\nimport hed from './Header.module.css';\r\n\r\nexport function Header(props: any) {\r\n    return (\r\n        <header className={hed.header}>\r\n            <img src=\"https://i.ibb.co/yV486Q1/logo.png\" alt=\"Logo\" />\r\n            <span className={hed.title}>Free Land</span>\r\n        </header>)\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css'\r\n\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item} ><NavLink to=\"/profile\" activeClassName={classes.active}> Profile</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink></div>\r\n            <div className={classes.item}><NavLink to=\"/setting\" activeClassName={classes.active}>Setting</NavLink></div>\r\n        </nav>\r\n    )\r\n}","import { ActionTypes, AddPostActionType, UpdatePostActionType } from \"./redux-store\";\r\n\r\nexport type PostDataType = {\r\n    id: string\r\n    message: string\r\n    src: string\r\n    likeCount: string\r\n}\r\nexport type ProfileDataType = {\r\n    background: string\r\n    ava: string\r\n}\r\nexport type ProfileStateType = {\r\n    postData: Array<PostDataType>\r\n    newPostText: string\r\n    profileData: Array<ProfileDataType>\r\n}\r\n\r\n\r\n\r\nlet initialState:ProfileStateType = {\r\n    postData: [\r\n        { id: \"1\", message: \"My first post\", src: \"http://pm1.narvii.com/6889/74979d4d2744ec6e27995b6e866f091d04c0b40cr1-515-414v2_uhq.jpg\", likeCount: \"23\" },\r\n        { id: \"2\", message: \"Hey friends!!!\", src: \"https://i.pinimg.com/236x/74/05/5f/74055f83bfbdc20fdc1f9d1fc116fd26.jpg\", likeCount: \"1\" },\r\n        { id: \"3\", message: \"Wow it's cool\", src: \"https://avatarko.ru/img/kartinka/2/Gubka_Bob.jpg\", likeCount: \"12\" },\r\n        { id: \"4\", message: \"very very good job\", src: \"http://pm1.narvii.com/6889/74979d4d2744ec6e27995b6e866f091d04c0b40cr1-515-414v2_uhq.jpg\", likeCount: \"32\" },\r\n        { id: \"5\", message: \"My second post\", src: \"https://www.meme-arsenal.com/memes/be50e6ba99654b5455027dcc82beb5b3.jpg\", likeCount: \"4\" },\r\n    ],\r\n    newPostText: \"it=kamasutra.com\",\r\n    profileData: [\r\n        { background: \"https://demo.qodeinteractive.com/central/wp-content/uploads/2013/05/header.jpg\", ava: \"Ava\" }\r\n    ],\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionTypes): ProfileStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            let newPost: PostDataType = {\r\n                id: \"5\",\r\n                message: action.postMessage,\r\n                src: \"https://cdn140.picsart.com/330959057057201.jpg\",\r\n                likeCount: \"0\"\r\n            };\r\n            state.postData.push(newPost);\r\n            return state;\r\n        case \"UPDATE-POST-TEXT\":\r\n            state.newPostText = action.newText;\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//TODO----------------------создаем ACTION-CREATORS----------\r\nexport const addPostActionCreator = (text: string): AddPostActionType => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        postMessage: text\r\n    }\r\n}\r\nexport const updatePostTextActionCreator = (newText: string): UpdatePostActionType => {\r\n    return {\r\n        type: \"UPDATE-POST-TEXT\",\r\n        newText: newText\r\n    }\r\n}","import React from 'react';\r\nimport post from './Post.module.css'\r\n\r\n\r\nexport type PostType1 = {\r\n    message: string\r\n    src: string\r\n    likeCount: string\r\n    \r\n}\r\n\r\nexport function Post(props: PostType1) {\r\n    return (\r\n\r\n        <div className={post.item}>\r\n            <img src={props.src} alt=\"\" />\r\n            {props.message}\r\n            <button>Like({props.likeCount})</button>\r\n            <button>DisLike</button>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { ActionTypes, PostDataType } from '../../../redux/store';\r\nimport { addPostActionCreator, updatePostTextActionCreator } from '../../../redux/profileReducer';\r\nimport mypost from './MyPosts.module.css'\r\nimport { Post } from './Post/Post';\r\n\r\ntype MyPostType = {\r\n    posts: Array<PostDataType>\r\n    newPostText: string\r\n    updatePostTextActionCreator: (body: string) => void\r\n    addPost: (text: string) => void\r\n}\r\n\r\nexport function MyPosts(props: MyPostType) {\r\n\r\n    const postElement = props.posts.map(p => <Post message={p.message} src={p.src} likeCount={p.likeCount} />)\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\r\n    const addPost = () => {\r\n        let text = newPostElement.current?.value; //  newPostElement.current &&  newPostElement.current.value; (Если элемент существует то возьмем его значение)\r\n        if (text) {\r\n            props.addPost(text);\r\n        };\r\n        props.updatePostTextActionCreator(\"\")\r\n    }\r\n    const onPostChange = (e: any) => {\r\n        props.updatePostTextActionCreator(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={mypost.block}>\r\n            <h3>My posts</h3>\r\n            <div >\r\n                <div>\r\n                    <textarea className={mypost.area} ref={newPostElement} value={props.newPostText} onChange={onPostChange} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add Post</button>\r\n                </div>\r\n            </div>\r\n            {postElement}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { addPostActionCreator, updatePostTextActionCreator } from '../../../redux/profileReducer';\r\nimport { ReduxStoreType } from '../../../redux/redux-store';\r\nimport { MyPosts } from './MyPosts';\r\n\r\ntype MyPostContainerType = {\r\n    store: ReduxStoreType\r\n}\r\n\r\nexport function MyPostsContainer(props: MyPostContainerType) {\r\n    let state = props.store.getState();\r\n    const addPost = (text: string) => {\r\n        props.store.dispatch(addPostActionCreator(text))\r\n        \r\n    }\r\n    const onPostChange = (body: string) => {\r\n        props.store.dispatch(updatePostTextActionCreator(body))\r\n    }\r\n    return (\r\n        <MyPosts\r\n            posts={state.profilePage.postData}\r\n            newPostText={state.profilePage.newPostText}\r\n            updatePostTextActionCreator={onPostChange}\r\n            addPost={addPost}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport { ProfileDataType } from '../../../redux/store';\r\nimport p from './ProfileInfo.module.css'\r\n\r\n\r\n\r\n\r\nexport function ProfileInfo(props: ProfileDataType) {\r\n  return (\r\n    <div className={p.content}>\r\n      <img src={props.background} alt=\"\" />\r\n      <div>{props.ava} </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { ReduxStoreType } from '../../redux/redux-store';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\nimport prof from './Profile.module.css'\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\n\r\nexport type ProfileType = {\r\n  store: ReduxStoreType\r\n}\r\n\r\n\r\nexport function Profile(props: ProfileType) {\r\nlet state = props.store.getState();\r\n  return (\r\n    <div className=\"container\">\r\n      <ProfileInfo background={state.profilePage.profileData[0].background} ava={state.profilePage.profileData[0].ava} />\r\n      <MyPostsContainer store={props.store} />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\n\r\nexport function Music(props: any) {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport function News(props: any) {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport function Setting(props: any) {\r\n    return (\r\n        <div>\r\n            Setting\r\n        </div>\r\n    )\r\n}","import { ActionTypes, SendMessageType, UpdateNewMessageType } from \"./redux-store\";\r\n\r\n\r\nexport type UserType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type UserMessageType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogsData: Array<UserType>\r\n    messagesData: Array<UserMessageType>\r\n    newMessageBody: string\r\n}\r\n\r\n\r\n\r\nlet initialState:DialogsStateType = {\r\n    dialogsData: [\r\n        { id: \"1\", name: \"Anna\" },\r\n        { id: \"2\", name: \"Dimych\" },\r\n        { id: \"3\", name: \"Kelvin\" },\r\n        { id: \"4\", name: \"Eliza\" },\r\n        { id: \"5\", name: \"Matt\" },\r\n        { id: \"6\", name: \"Connor\" }\r\n    ],\r\n    messagesData: [\r\n        { id: \"1\", message: \"hi\" },\r\n        { id: \"2\", message: \"How are you?\" },\r\n        { id: \"3\", message: \"It's cool!!\" },\r\n        { id: \"4\", message: \"Nice!\" },\r\n        { id: \"5\", message: \" \" },\r\n        { id: \"6\", message: \"Im sexy\" },\r\n    ],\r\n    newMessageBody: \"\",\r\n\r\n\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action:ActionTypes):DialogsStateType => {\r\n    switch(action.type) {\r\n        case \"UPDATE-NEW-MESSAGE-BODY\":\r\n            state.newMessageBody = action.body;\r\n            return state;\r\n        case \"SEND-MESSAGE\": \r\n        let body = state.newMessageBody;\r\n        state.newMessageBody = \"\";\r\n        state.messagesData.push({ id: \"7\", message: body },)\r\n        return state;\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//TODO----------------------создаем ACTION-CREATORS----------\r\nexport const updateNewMessageBodyCreator = (body: string): UpdateNewMessageType => {\r\n    return {\r\n        type: \"UPDATE-NEW-MESSAGE-BODY\",\r\n        body: body\r\n    }\r\n}\r\nexport const sendMessageCreator = (): SendMessageType => {\r\n    return {\r\n        type: \"SEND-MESSAGE\",\r\n\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport d from \"./../Dialogs.module.css\"\r\n\r\n\r\n\r\ntype DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    return (\r\n        <div className={`${d.dialog} ${d.active}`}>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport d from \"./../Dialogs.module.css\"\r\n\r\n\r\nexport type MessageType = {\r\n    mes: string\r\n}\r\n\r\nexport function Message(props: MessageType) {\r\n    return (\r\n        <div className={d.message}>{props.mes}</div>\r\n    )\r\n}\r\n\r\n","import React, { ChangeEvent } from 'react';\r\nimport { UserMessageType, UserType } from '../../redux/dialogsReducer';\r\n\r\nimport { DialogItem } from './DialogItems/DialogItem';\r\nimport d from \"./Dialogs.module.css\"\r\nimport { Message } from './Messages/Message';\r\n\r\nexport type DialogsType = {\r\n    dialogsData: Array<UserType>\r\n    messagesData: Array<UserMessageType>\r\n    newMessageBody: string\r\n    sendMessageCreator: () => void\r\n    updateNewMessageBodyCreator: (body: string) => void\r\n}\r\n\r\nexport function Dialogs(props: DialogsType) {\r\n    const dialogsElements = props.dialogsData.map(d => <DialogItem name={d.name} id={d.id} />);\r\n    const messageElements = props.messagesData.map(m => <Message mes={m.message} />);\r\n    const onSendMessageClick = () => { props.sendMessageCreator() };\r\n    const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => { props.updateNewMessageBodyCreator(e.currentTarget.value) }\r\n    return (\r\n        <div className={d.dialogs}>\r\n            <div className={d.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={d.messageItems}>\r\n                <div>{messageElements}</div>\r\n                <div>\r\n                    <div><textarea placeholder=\"Enter your message\" value={props.newMessageBody} onChange={onNewMessageChange}></textarea> </div>\r\n                    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator, UserMessageType, UserType } from '../../redux/dialogsReducer';\r\nimport { ReduxStoreType } from '../../redux/redux-store';\r\nimport { Dialogs } from './Dialogs';\r\n\r\n\r\nexport type DialogsContainerType = {\r\n    store: ReduxStoreType\r\n}\r\n\r\nexport function DialogsContainer(props: DialogsContainerType) {\r\n    let state = props.store.getState();\r\n    const onSendMessageClick = () => { props.store.dispatch(sendMessageCreator()) };\r\n    const onNewMessageChange = (body: string) => { props.store.dispatch(updateNewMessageBodyCreator(body)) }\r\n    return (\r\n        <Dialogs\r\n            dialogsData={state.dialogsPage.dialogsData}\r\n            messagesData={state.dialogsPage.messagesData}\r\n            newMessageBody={state.dialogsPage.newMessageBody}\r\n            sendMessageCreator={onSendMessageClick}\r\n            updateNewMessageBodyCreator={onNewMessageChange}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Header } from './components/Header/Header';\r\nimport { Navbar } from './components/Navbar/Navbar';\r\nimport { Profile } from './components/Profile/Profile';\r\nimport { Music } from './components/Music/Music';\r\nimport { News } from './components/News/News';\r\nimport { Setting } from './components/Setting/Setting';\r\nimport { ActionTypes } from './redux/redux-store';\r\nimport { DialogsContainer } from './components/Dialogs/DialogsContainer';\r\n\r\ntype AppPropsType = {\r\n  store: any\r\n  state: any\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nfunction App(props: AppPropsType) {\r\n\r\n  const appState = props.store.getState();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='app-wrapper'>\r\n        <Header />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route render={() => <DialogsContainer\r\n            store={props.store}\r\n          />} path=\"/dialogs\" />\r\n          <Route render={() => <Profile\r\n            store={props.store}\r\n          />} path=\"/profile\" />\r\n          <Route render={() => <News />} path=\"/news\" />\r\n          <Route render={() => <Music />} path=\"/music\" />\r\n          <Route render={() => <Setting />} path=\"/setting\" />\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ActionTypes } from \"./redux-store\";\r\n\r\nlet initialState:any = {};\r\n\r\nexport const sidebarReducer = (state:any=initialState, action:ActionTypes) => {\r\n\r\n    return state;\r\n}","import { combineReducers, createStore } from \"redux\";\r\nimport { dialogsReducer, DialogsStateType } from \"./dialogsReducer\";\r\nimport { profileReducer, ProfileStateType } from \"./profileReducer\";\r\nimport { sidebarReducer } from \"./sidebarReducer\";\r\n\r\n\r\nexport type ActionTypes = AddPostActionType | UpdatePostActionType | UpdateNewMessageType | SendMessageType\r\nexport type AddPostActionType = {\r\n    type: \"ADD-POST\"\r\n    postMessage: string\r\n}\r\n// export type AddPostActionType = ReturnType<typeof addPostActionCreator>\r\nexport type UpdatePostActionType = {\r\n    type: \"UPDATE-POST-TEXT\"\r\n    newText: string\r\n}\r\nexport type UpdateNewMessageType = {\r\n    type: \"UPDATE-NEW-MESSAGE-BODY\"\r\n    body: string\r\n}\r\nexport type SendMessageType = {\r\n    type: \"SEND-MESSAGE\"\r\n\r\n}\r\nexport type ReduxStateType = {\r\n    profilePage: ProfileStateType\r\n    dialogsPage: DialogsStateType\r\n    sidebarPage: any\r\n}\r\n\r\n//Обьединяем наши редьюсеры\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer\r\n});\r\nexport type ReduxStoreType = {\r\n    getState: () => ReduxStateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n//отдаем редьюсеры стору\r\nexport let store: ReduxStoreType = createStore(reducers);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ReduxStateType, store } from './redux/redux-store';\r\nimport './index.css';\r\n\r\n\r\n\r\nlet rerenderEntireTree = (state: ReduxStateType) => {\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App store={store} state={state}  dispatch={store.dispatch.bind(store)}/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\n\r\nrerenderEntireTree(store.getState());\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState();\r\n  rerenderEntireTree(state);\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2h0ef\",\"item\":\"Navbar_item__22eW8\",\"active\":\"Navbar_active__A2NPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1aqog\",\"dialogsItems\":\"Dialogs_dialogsItems__2974J\",\"dialog\":\"Dialogs_dialog__SZ_g3\",\"messageItems\":\"Dialogs_messageItems__1TdIq\",\"message\":\"Dialogs_message__kZH15\"};"],"sourceRoot":""}