[{"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\Profile.tsx":"1","E:\\it-kamasutra\\Social-Network\\src\\App.tsx":"2","E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\Header.tsx":"3","E:\\it-kamasutra\\Social-Network\\src\\index.tsx":"4","E:\\it-kamasutra\\Social-Network\\src\\redux\\dialogsReducer.tsx":"5","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Messages\\Message.tsx":"6","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"7","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"8","E:\\it-kamasutra\\Social-Network\\src\\components\\Setting\\Setting.tsx":"9","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"11","E:\\it-kamasutra\\Social-Network\\src\\components\\Navbar\\Navbar.tsx":"12","E:\\it-kamasutra\\Social-Network\\src\\components\\News\\News.tsx":"13","E:\\it-kamasutra\\Social-Network\\src\\components\\Music\\Music.tsx":"14","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogsContainer.tsx":"15","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Dialogs.tsx":"16","E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\Users.tsx":"17","E:\\it-kamasutra\\Social-Network\\src\\redux\\profileReducer.tsx":"18","E:\\it-kamasutra\\Social-Network\\src\\redux\\redux-store.tsx":"19","E:\\it-kamasutra\\Social-Network\\src\\redux\\sidebarReducer.tsx":"20","E:\\it-kamasutra\\Social-Network\\src\\redux\\usersReducer.ts":"21","E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\UsersContainer.tsx":"22","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogItems\\DialogItem.tsx":"23","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileContainer.tsx":"24","E:\\it-kamasutra\\Social-Network\\src\\components\\common\\Preloader\\Preloader.tsx":"25","E:\\it-kamasutra\\Social-Network\\src\\redux\\authReducer.ts":"26","E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\HeaderContainer.tsx":"27","E:\\it-kamasutra\\Social-Network\\src\\api\\api.ts":"28","E:\\it-kamasutra\\Social-Network\\src\\components\\Login\\Login.tsx":"29","E:\\it-kamasutra\\Social-Network\\src\\hoc\\withAuthRedirect.tsx":"30","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"31","E:\\it-kamasutra\\Social-Network\\src\\components\\Login\\LoginForm\\LoginForm.tsx":"32","E:\\it-kamasutra\\Social-Network\\src\\utils\\validators\\validators.ts":"33","E:\\it-kamasutra\\Social-Network\\src\\components\\common\\FormsControl\\FormControl.tsx":"34","E:\\it-kamasutra\\Social-Network\\src\\redux\\appReducer.ts":"35","E:\\it-kamasutra\\Social-Network\\src\\redux\\usersSelectors.ts":"36"},{"size":617,"mtime":1623243073048,"results":"37","hashOfConfig":"38"},{"size":2385,"mtime":1622132961434,"results":"39","hashOfConfig":"38"},{"size":660,"mtime":1621542944473,"results":"40","hashOfConfig":"38"},{"size":513,"mtime":1621542944585,"results":"41","hashOfConfig":"38"},{"size":1675,"mtime":1621542944591,"results":"42","hashOfConfig":"38"},{"size":223,"mtime":1621542944472,"results":"43","hashOfConfig":"38"},{"size":995,"mtime":1623237753932,"results":"44","hashOfConfig":"38"},{"size":1666,"mtime":1623265809643,"results":"45","hashOfConfig":"38"},{"size":119,"mtime":1620242999622,"results":"46","hashOfConfig":"38"},{"size":429,"mtime":1621542944516,"results":"47","hashOfConfig":"38"},{"size":804,"mtime":1623264535231,"results":"48","hashOfConfig":"38"},{"size":962,"mtime":1621542944484,"results":"49","hashOfConfig":"38"},{"size":111,"mtime":1620242928146,"results":"50","hashOfConfig":"38"},{"size":115,"mtime":1621542944483,"results":"51","hashOfConfig":"38"},{"size":1096,"mtime":1621542944468,"results":"52","hashOfConfig":"38"},{"size":2364,"mtime":1621542944450,"results":"53","hashOfConfig":"38"},{"size":2819,"mtime":1622133119782,"results":"54","hashOfConfig":"38"},{"size":4658,"mtime":1623243301161,"results":"55","hashOfConfig":"38"},{"size":1989,"mtime":1621542944594,"results":"56","hashOfConfig":"38"},{"size":181,"mtime":1621468205136,"results":"57","hashOfConfig":"38"},{"size":5992,"mtime":1623229678259,"results":"58","hashOfConfig":"38"},{"size":3267,"mtime":1623231450086,"results":"59","hashOfConfig":"38"},{"size":373,"mtime":1621542944443,"results":"60","hashOfConfig":"38"},{"size":2519,"mtime":1623259120338,"results":"61","hashOfConfig":"38"},{"size":285,"mtime":1621541980969,"results":"62","hashOfConfig":"38"},{"size":2346,"mtime":1622131760309,"results":"63","hashOfConfig":"38"},{"size":654,"mtime":1621542944474,"results":"64","hashOfConfig":"38"},{"size":2054,"mtime":1623259724177,"results":"65","hashOfConfig":"38"},{"size":1181,"mtime":1621542944475,"results":"66","hashOfConfig":"38"},{"size":789,"mtime":1621542944582,"results":"67","hashOfConfig":"38"},{"size":3033,"mtime":1623259377260,"results":"68","hashOfConfig":"38"},{"size":1491,"mtime":1621542944475,"results":"69","hashOfConfig":"38"},{"size":708,"mtime":1621542944609,"results":"70","hashOfConfig":"38"},{"size":1937,"mtime":1621542944572,"results":"71","hashOfConfig":"38"},{"size":1045,"mtime":1621542944587,"results":"72","hashOfConfig":"38"},{"size":1216,"mtime":1623233412526,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1cmdz19",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\Profile.tsx",[],["153","154"],"E:\\it-kamasutra\\Social-Network\\src\\App.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\Header.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\index.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\dialogsReducer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Messages\\Message.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Setting\\Setting.tsx",[],["155","156"],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Navbar\\Navbar.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\News\\News.tsx",[],["157","158"],"E:\\it-kamasutra\\Social-Network\\src\\components\\Music\\Music.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Dialogs.tsx",["159","160"],"E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\Users.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\profileReducer.tsx",["161"],"import { profileAPI, ResultCodeENum, usersAPI } from \"../api/api\";\r\nimport { ActionTypes, DispatchType, ThunkType } from \"./redux-store\";\r\ntype ContactsType = {\r\n    \"facebook\": string | null\r\n    \"website\": string | null\r\n    \"vk\": string | null\r\n    \"twitter\": string | null\r\n    \"instagram\": string | null\r\n    \"youtube\": string | null\r\n    \"github\": string | null\r\n    \"mainLink\": string | null\r\n}\r\ntype PhotosType = {\r\n    \"small\": string\r\n    \"large\": string\r\n}\r\nexport type ProfileDataType = {\r\n    \"aboutMe\": string | null\r\n    \"contacts\": ContactsType\r\n    \"lookingForAJob\": boolean\r\n    \"lookingForAJobDescription\": string | null\r\n    \"fullName\": string\r\n    \"userId\": number\r\n    \"photos\": PhotosType\r\n} | null\r\nexport type PostDataType = {\r\n    id: string\r\n    message: string\r\n    src: string\r\n    likeCount: string\r\n}\r\nexport type ProfileStateType = {\r\n    postData: Array<PostDataType>\r\n    profileData: ProfileDataType\r\n    status: string\r\n}\r\nexport type AddPostActionType = {\r\n    type: \"ADD-POST\"\r\n    postMessage: string\r\n}\r\nexport type SetUserProfileType = {\r\n    type: \"SET-USER-PROFILE\",\r\n    profile: ProfileDataType\r\n}\r\nexport type SetStatusType = {\r\n    type: \"SET-STATUS\"\r\n    status: string\r\n}\r\n\r\nlet initialState: ProfileStateType = {\r\n    postData: [\r\n        { id: \"1\", message: \"My first post\", src: \"https://www.b17.ru/foto/uploaded/b69a564c47110acefb8c986f768210ac.jpg\", likeCount: \"23\" },\r\n        { id: \"2\", message: \"Hey friends!!!\", src: \"https://klike.net/uploads/posts/2019-03/1551511784_4.jpg\", likeCount: \"12\" },\r\n        { id: \"4\", message: \"very very good job\", src: \"https://pictureholiday.ru/wp-content/uploads/2018/05/lrdh7n2l4l0.jpg\", likeCount: \"32\" },\r\n        { id: \"5\", message: \"My second post\", src: \"https://www.meme-arsenal.com/memes/be50e6ba99654b5455027dcc82beb5b3.jpg\", likeCount: \"4\" },\r\n    ],\r\n    profileData: null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionTypes): ProfileStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            let newPost: PostDataType = {\r\n                id: \"5\",\r\n                message: action.postMessage,\r\n                src: \"https://lh3.googleusercontent.com/proxy/3rJu_amx5VvIAQOWhgcizmF3sYMiZ1CeLWGXAmDmlITG_ZUxNXKHCBkBQWo0rTkebuBkxOs5bgKaU4m_SWFiaDRobK1AzfC4LHulca3hMn3YvJxPGKEeNEEzmpsPn2eY3Nw65qUUIn4E1TYLp4o8ABQsDB13jFsjyYB_S_K937soqhA_7_UUmvwOUYkJe8MiFNt4BPHHHMQ9PKnCrM8lInd98DtLPWGpnYCGDZLkAvogYT9xFeS72g22w50XtttvfpsvdsxG\",\r\n                likeCount: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost], //используем спрэд-оператор вместо push\r\n            }\r\n        case \"SET-USER-PROFILE\":\r\n            return {\r\n                ...state,\r\n                profileData: action.profile\r\n            }\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//TODO----------------------создаем ACTION-CREATORS----------\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionType => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        postMessage: newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileDataType): SetUserProfileType => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profile,\r\n    }\r\n}\r\n\r\nexport const setStatus = (status: string): SetStatusType => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        status,\r\n    }\r\n}\r\n\r\n\r\n//TODO----------------------создаем Thunk-CREATORS----------\r\n\r\nexport const getUserProfileThunkCreator = (userId: number | null): ThunkType =>\r\n     (dispatch: DispatchType) => {\r\n         profileAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data));\r\n            });\r\n    }\r\n\r\nexport const getUserStatus = (userId: number | null): ThunkType =>\r\n    (dispatch: DispatchType) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setStatus(response.data));\r\n            });\r\n    }\r\n\r\nexport const updateUserStatus = (status: string): ThunkType =>\r\n    (dispatch: DispatchType) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.data.resultCode === ResultCodeENum.Success) {\r\n                    dispatch(setStatus(status));\r\n                }\r\n            })\r\n            //!test\r\n            .catch(rej=>console.log('ERROR'));\r\n    }\r\n","E:\\it-kamasutra\\Social-Network\\src\\redux\\redux-store.tsx",["162"],"E:\\it-kamasutra\\Social-Network\\src\\redux\\sidebarReducer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\usersReducer.ts",["163","164","165"],"import { ThunkAction } from \"redux-thunk\";\r\nimport { ResultCodeENum, usersAPI } from \"../api/api\";\r\nimport { ActionTypes, DispatchType, ReduxStateType, ThunkType } from \"./redux-store\";\r\n\r\nexport type LocationType = {\r\n  city: string;\r\n  country: string;\r\n};\r\nexport type PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\nexport type UserOfSearchType = {\r\n  id: number;\r\n  photos: PhotosType\r\n  followed: boolean;\r\n  name: string;\r\n  status: string;\r\n};\r\nexport type UsersOfSearchType = Array<UserOfSearchType>;\r\nexport type UsersStateType = {\r\n  users: UsersOfSearchType\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<number | null>\r\n};\r\nexport type FollowType = {\r\n  type: \"FOLLOW\";\r\n  userId: number;\r\n};\r\nexport type UnFollowType = {\r\n  type: \"UNFOLLOW\";\r\n  userId: number;\r\n};\r\nexport type SetUsersType = {\r\n  type: \"SET-USERS\";\r\n  users: UsersOfSearchType;\r\n};\r\nexport type CurrentPageType = {\r\n  type: \"SET-CURRENT-PAGE\"\r\n  currentPage: number\r\n}\r\nexport type TotalCountType = {\r\n  type: \"SET-TOTAL-COUNT\",\r\n  totalUsersCount: number\r\n}\r\nexport type ToggleIsFetchingType = {\r\n  type: \"TOGGLE-IS-FETCHING\",\r\n  isFetching: boolean\r\n};\r\nexport type ToggleIsFollowingProgressType = {\r\n  type: \"TOGGLE-IS-FOLLOWING-PROGRESS\",\r\n  isFetching: boolean\r\n  userId: number\r\n};\r\nlet initialState: UsersStateType = {\r\n  users: [],\r\n  pageSize: 25,\r\n  totalUsersCount: 5,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n};\r\n\r\nexport const usersReducer = (\r\n  state: UsersStateType = initialState,\r\n  action: ActionTypes\r\n): UsersStateType => {\r\n  switch (action.type) {\r\n    case \"FOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          //map  то же самое что и users: [...state.users]\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case \"UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          //map  то же самое что и users: [...state.users]\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case \"SET-USERS\": {\r\n      return { ...state, users: action.users };\r\n    };\r\n    case \"SET-CURRENT-PAGE\": {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case \"SET-TOTAL-COUNT\": {\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    }\r\n    case \"TOGGLE-IS-FETCHING\": {\r\n      return { ...state, isFetching: action.isFetching }\r\n    }\r\n    case \"TOGGLE-IS-FOLLOWING-PROGRESS\": {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//TODO----------------------создаем ACTION-CREATORS----------\r\n//! переписать под payload {}\r\n//follow friends\r\nexport const followSuccess = (userId: number): FollowType => {\r\n  return {\r\n    type: \"FOLLOW\",\r\n    userId: userId,\r\n  };\r\n};\r\n//unfollow friends\r\nexport const unfollowSuccess = (userId: number): UnFollowType => {\r\n  return {\r\n    type: \"UNFOLLOW\",\r\n    userId: userId,\r\n  };\r\n};\r\n//засунуть пользователей которых мы найдем в стейт\r\nexport const setUsers = (users: UsersOfSearchType): SetUsersType => {\r\n  return {\r\n    type: \"SET-USERS\",\r\n    users: users,\r\n  };\r\n};\r\n//установить текущую страницу\r\nexport const setCurrentPage = (currentPage: number): CurrentPageType => {\r\n  return {\r\n    type: \"SET-CURRENT-PAGE\",\r\n    currentPage: currentPage\r\n  };\r\n};\r\n//установить общее кол-во пользователей с сервера\r\nexport const setTotalCount = (totalUsersCount: number): TotalCountType => {\r\n  return {\r\n    type: \"SET-TOTAL-COUNT\",\r\n    totalUsersCount: totalUsersCount\r\n  };\r\n};\r\n//создаем прелоадер\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => {\r\n  return {\r\n    type: \"TOGGLE-IS-FETCHING\",\r\n    isFetching: isFetching\r\n  };\r\n};\r\n//отключаем кнопку фоловинга при нажатии\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number): ToggleIsFollowingProgressType => {\r\n  return {\r\n    type: \"TOGGLE-IS-FOLLOWING-PROGRESS\",\r\n    isFetching,\r\n    userId\r\n  };\r\n};\r\n\r\n//todo Создаем ThunkCreator\r\n\r\nexport const getUsersThunkCreator = (page: number, pageSize: number): ThunkType => {\r\n  //через замыкание\r\n  return async (dispatch: DispatchType) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    usersAPI.getUsers(page, pageSize).then(data => {\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalCount(data.totalCount));\r\n    });\r\n  }\r\n}\r\n\r\nexport const followThunkCreator = (userId: number): ThunkType => {\r\n\r\n  return async (dispatch: DispatchType) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n\r\n    usersAPI.getFollow(userId)\r\n      .then(response => {\r\n        if (response.data.resultCode === ResultCodeENum.Success) {\r\n          dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId));\r\n      });\r\n  }\r\n}\r\n\r\nexport const unFollowThunkCreator = (userId: number): ThunkType => {\r\n\r\n  return async (dispatch: DispatchType) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n\r\n    usersAPI.getUnFollow(userId)\r\n      .then(response => {\r\n        if (response.data.resultCode === ResultCodeENum.Success) {\r\n          dispatch(unfollowSuccess(userId));\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId));\r\n      });\r\n  }\r\n}","E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\UsersContainer.tsx",["166","167","168"],"import { connect } from 'react-redux';\r\nimport { ReduxStateType } from '../../redux/redux-store';\r\nimport {\r\n    setCurrentPage, UsersOfSearchType, toggleIsFollowingProgress, getUsersThunkCreator, followThunkCreator,\r\n    unFollowThunkCreator\r\n} from '../../redux/usersReducer';\r\nimport React from 'react';\r\nimport { Users } from './Users';\r\nimport { Preloader } from '../common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUserCount, getUsers } from '../../redux/usersSelectors';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersOfSearchType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number | null>\r\n}\r\n\r\ntype UsersAPIType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersOfSearchType\r\n    isFetching: boolean\r\n    followingProgress: Array<number | null>\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n\r\n}\r\nexport class UsersAPiComponent extends React.Component<UsersAPIType>{\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                followingProgress={this.props.followingProgress}\r\n                followThunkCreator={this.props.followThunkCreator}\r\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n//todo старый mapStateToProps\r\n// let mapStateToProps = (state: ReduxStateType): MapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingProgress: state.usersPage.followingInProgress\r\n//     }\r\n// };\r\n\r\n//todo используем селекторы\r\nlet mapStateToProps = (state: ReduxStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUsersThunkCreator,\r\n        followThunkCreator,\r\n        unFollowThunkCreator,\r\n    })\r\n)(UsersAPiComponent)\r\n","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogItems\\DialogItem.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\common\\Preloader\\Preloader.tsx",["169"],"E:\\it-kamasutra\\Social-Network\\src\\redux\\authReducer.ts",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\HeaderContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\api\\api.ts",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Login\\Login.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\hoc\\withAuthRedirect.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["170","171"],"import axios from 'axios';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { profileAPI } from '../../../api/api';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\nexport const ProfileStatus = (props: ProfileStatusType) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => { setEditMode(true) }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// import React, { ChangeEvent } from 'react';\r\n\r\n// type ProfileStatusType = {\r\n//     status: string\r\n//     updateStatus: (status: string) => void\r\n// }\r\n\r\n// type StateType = {\r\n//     editMode: boolean\r\n//     status: string\r\n// }\r\n// class ProfileStatus extends React.Component<ProfileStatusType> {\r\n//     state: StateType = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true\r\n//         });\r\n//     }\r\n//     deactivateEditMode() {\r\n//         this.setState({\r\n//             editMode: false\r\n//         });\r\n//         this.props.updateStatus(this.state.status);\r\n//     }\r\n\r\n//     onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         });\r\n//     }\r\n\r\n//     componentDidUpdate(prevProps: ProfileStatusType, prevState: StateType) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.editMode &&\r\n//                     <div>\r\n//                         <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n//                     </div>\r\n//                 }\r\n//                 {this.state.editMode &&\r\n//                     <div>\r\n//                         <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.state.status} />\r\n//                     </div>\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default ProfileStatus;","E:\\it-kamasutra\\Social-Network\\src\\components\\Login\\LoginForm\\LoginForm.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\utils\\validators\\validators.ts",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\common\\FormsControl\\FormControl.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\appReducer.ts",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\usersSelectors.ts",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"172","replacedBy":"176"},{"ruleId":"174","replacedBy":"177"},{"ruleId":"172","replacedBy":"178"},{"ruleId":"174","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":28},{"ruleId":"180","severity":1,"message":"184","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":18},{"ruleId":"180","severity":1,"message":"185","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":46},{"ruleId":"180","severity":1,"message":"186","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":20},{"ruleId":"180","severity":1,"message":"187","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":21},{"ruleId":"180","severity":1,"message":"188","line":3,"column":37,"nodeType":"182","messageId":"183","endLine":3,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":96,"column":23,"nodeType":"191","messageId":"192","endLine":98,"endColumn":6},{"ruleId":"180","severity":1,"message":"193","line":4,"column":5,"nodeType":"182","messageId":"183","endLine":4,"endColumn":19},{"ruleId":"180","severity":1,"message":"194","line":4,"column":40,"nodeType":"182","messageId":"183","endLine":4,"endColumn":65},{"ruleId":"180","severity":1,"message":"195","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":26},{"ruleId":"196","severity":1,"message":"197","line":8,"column":13,"nodeType":"198","endLine":8,"endColumn":36},{"ruleId":"180","severity":1,"message":"199","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"180","severity":1,"message":"200","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":20},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],["201"],["202"],["201"],["202"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'usersAPI' is defined but never used.","'FormAction' is defined but never used.","'ThunkAction' is defined but never used.","'ReduxStateType' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setCurrentPage' is defined but never used.","'toggleIsFollowingProgress' is defined but never used.","'withAuthRedirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'profileAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]