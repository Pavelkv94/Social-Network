[{"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\Profile.tsx":"1","E:\\it-kamasutra\\Social-Network\\src\\App.tsx":"2","E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\Header.tsx":"3","E:\\it-kamasutra\\Social-Network\\src\\index.tsx":"4","E:\\it-kamasutra\\Social-Network\\src\\redux\\dialogsReducer.tsx":"5","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Messages\\Message.tsx":"6","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"7","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"8","E:\\it-kamasutra\\Social-Network\\src\\components\\Setting\\Setting.tsx":"9","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"11","E:\\it-kamasutra\\Social-Network\\src\\components\\Navbar\\Navbar.tsx":"12","E:\\it-kamasutra\\Social-Network\\src\\components\\News\\News.tsx":"13","E:\\it-kamasutra\\Social-Network\\src\\components\\Music\\Music.tsx":"14","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogsContainer.tsx":"15","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Dialogs.tsx":"16","E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\Users.tsx":"17","E:\\it-kamasutra\\Social-Network\\src\\redux\\profileReducer.tsx":"18","E:\\it-kamasutra\\Social-Network\\src\\redux\\redux-store.tsx":"19","E:\\it-kamasutra\\Social-Network\\src\\redux\\sidebarReducer.tsx":"20","E:\\it-kamasutra\\Social-Network\\src\\redux\\usersReducer.ts":"21","E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\UsersContainer.tsx":"22","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogItems\\DialogItem.tsx":"23","E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileContainer.tsx":"24","E:\\it-kamasutra\\Social-Network\\src\\components\\common\\Preloader\\Preloader.tsx":"25","E:\\it-kamasutra\\Social-Network\\src\\redux\\authReducer.ts":"26","E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\HeaderContainer.tsx":"27","E:\\it-kamasutra\\Social-Network\\src\\api\\api.ts":"28"},{"size":517,"mtime":1618316310581,"results":"29","hashOfConfig":"30"},{"size":1360,"mtime":1618833546730,"results":"31","hashOfConfig":"30"},{"size":537,"mtime":1618833924107,"results":"32","hashOfConfig":"30"},{"size":706,"mtime":1616872757216,"results":"33","hashOfConfig":"30"},{"size":2115,"mtime":1618316606163,"results":"34","hashOfConfig":"30"},{"size":251,"mtime":1616622204366,"results":"35","hashOfConfig":"30"},{"size":674,"mtime":1618317117046,"results":"36","hashOfConfig":"30"},{"size":1614,"mtime":1618316623015,"results":"37","hashOfConfig":"30"},{"size":145,"mtime":1616622204389,"results":"38","hashOfConfig":"30"},{"size":457,"mtime":1616622204384,"results":"39","hashOfConfig":"30"},{"size":1009,"mtime":1617263163259,"results":"40","hashOfConfig":"30"},{"size":990,"mtime":1616937150788,"results":"41","hashOfConfig":"30"},{"size":139,"mtime":1616622204375,"results":"42","hashOfConfig":"30"},{"size":141,"mtime":1616622204371,"results":"43","hashOfConfig":"30"},{"size":1164,"mtime":1617263186748,"results":"44","hashOfConfig":"30"},{"size":1521,"mtime":1616932190160,"results":"45","hashOfConfig":"30"},{"size":3224,"mtime":1619448743326,"results":"46","hashOfConfig":"30"},{"size":3833,"mtime":1618316174569,"results":"47","hashOfConfig":"30"},{"size":1709,"mtime":1618851317131,"results":"48","hashOfConfig":"30"},{"size":181,"mtime":1616937586414,"results":"49","hashOfConfig":"30"},{"size":6121,"mtime":1619447898190,"results":"50","hashOfConfig":"30"},{"size":5111,"mtime":1619448798583,"results":"51","hashOfConfig":"30"},{"size":401,"mtime":1616622204360,"results":"52","hashOfConfig":"30"},{"size":1561,"mtime":1618835784688,"results":"53","hashOfConfig":"30"},{"size":285,"mtime":1618082485282,"results":"54","hashOfConfig":"30"},{"size":876,"mtime":1618834050468,"results":"55","hashOfConfig":"30"},{"size":933,"mtime":1618833870014,"results":"56","hashOfConfig":"30"},{"size":731,"mtime":1619446954199,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1cmdz19",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\Profile.tsx",["120"],"import React from 'react';\r\nimport { ProfileDataType } from '../../redux/profileReducer';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\nimport prof from './Profile.module.css'\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\n\r\nexport type ProfileType = {\r\n  profile: ProfileDataType\r\n}\r\n\r\nexport function Profile(props: any) {\r\n  console.log(props)\r\n  return (\r\n    <div className=\"container\">\r\n      <ProfileInfo profile={props.profile} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}",["121","122"],"E:\\it-kamasutra\\Social-Network\\src\\App.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\Header.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\index.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\dialogsReducer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Messages\\Message.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Setting\\Setting.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],["123","124"],"E:\\it-kamasutra\\Social-Network\\src\\components\\Navbar\\Navbar.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\News\\News.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Music\\Music.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\Dialogs.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\Users.tsx",["125","126"],"import React from 'react';\r\nimport { UsersOfSearchType } from '../../redux/usersReducer';\r\nimport profileLogo from '../../assets/images/profileLogo.png'\r\nimport style from './Users.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { usersAPI } from '../../api/api';\r\n\r\ntype UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersOfSearchType\r\n    followingProgress: Array<number | null>\r\n    //followSuccess: (userId: number) => void,\r\n    //unfollowSuccess: (usersId: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    // toggleIsFollowingProgress: (isFollowing: boolean, userId: number) => void\r\n    followThunkCreator: (userId: any) => void\r\n    unFollowThunkCreator: (userId: any) => void\r\n\r\n}\r\nexport function Users(props: UsersType) {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    //for (let i = 1; i <= pagesCount; i++) {\r\n    for (let i = Math.max(props.currentPage - 5, 1); i <= Math.max(1, Math.min(props.currentPage + 5, pagesCount)); i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div className={style.container}>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span\r\n                    className={props.currentPage === p ? style.selected : style.paginat}\r\n                    onClick={() => props.onPageChanged(p)}\r\n                >{p}</span>\r\n            })}\r\n\r\n        </div>\r\n        {\r\n            props.users.map(u =>\r\n                <div key={u.id} className={style.userInfo}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={`/profile/ + ${u.id}`}>\r\n                                <img src={u.photos.small != null ? u.photos.small : profileLogo} alt=\"avatar\" className={style.userLogo} />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button\r\n                                    disabled={props.followingProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.followThunkCreator(u.id)\r\n\r\n                                    }}>UNFOLLOW</button>\r\n                                : <button\r\n                                    disabled={props.followingProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.unFollowThunkCreator(u.id)\r\n\r\n\r\n                                    }}>FOLLOW</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{'u.location.city'}</div>\r\n                            <div>{'u.location.country'}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\it-kamasutra\\Social-Network\\src\\redux\\profileReducer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\redux-store.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\sidebarReducer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\redux\\usersReducer.ts",["127","128","129"],"E:\\it-kamasutra\\Social-Network\\src\\components\\Users\\UsersContainer.tsx",["130","131","132","133","134","135","136"],"import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { ReduxStateType } from '../../redux/redux-store';\r\nimport {\r\n    followSuccess, setCurrentPage, setTotalCount, setUsers, toggleIsFetching, unfollowSuccess, UsersOfSearchType, toggleIsFollowingProgress, getUsersThunkCreator, followThunkCreator,\r\n    unFollowThunkCreator\r\n} from '../../redux/usersReducer';\r\nimport React from 'react';\r\nimport { Users } from './Users';\r\nimport { Preloader } from '../common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: UsersOfSearchType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number | null>\r\n}\r\n// type MapDispatchToPropsType = {\r\n//     follow: (userId: number) => void,\r\n//     unfollow: (usersId: number) => void\r\n//     setUsers: (users: UsersOfSearchType) => void\r\n//     setCurrentPage: (currentPage: number) => void\r\n//     setTotalCount: (totalUsersCount: number) => void\r\n//     toggleIsFetching: (isFetching: boolean) => void\r\n// }\r\n\r\n\r\ntype UsersAPIType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UsersOfSearchType\r\n    isFetching: boolean\r\n    followingProgress: Array<number | null>\r\n    // followSuccess: (userId: number) => void,\r\n    // unfollowSuccess: (usersId: number) => void\r\n    //setUsers: (users: UsersOfSearchType) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    //setTotalCount: (totalUsersCount: number) => void\r\n    // toggleIsFetching: (isFetching: boolean) => void\r\n    toggleIsFollowingProgress: (isFollowing: boolean, userId: number) => void\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    followThunkCreator: (userId: any) => void\r\n    unFollowThunkCreator: (userId: any) => void\r\n\r\n}\r\nexport class UsersAPiComponent extends React.Component<UsersAPIType>{\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n        //Этот код мы отправили в санки\r\n        // this.props.toggleIsFetching(true)\r\n\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.setTotalCount(data.totalCount);\r\n        // });\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items);\r\n        // });\r\n    };\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                //followSuccess={this.props.followSuccess}\r\n                //unfollowSuccess={this.props.unfollowSuccess}\r\n                // toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                followingProgress={this.props.followingProgress}\r\n                followThunkCreator={this.props.followThunkCreator}\r\n                unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n// let mapDispatchToProps = (dispatch: DispatchType): MapDispatchToPropsType => {\r\n//     return {\r\n//         follow: (userId: number) => { dispatch(followAC(userId)) },\r\n//         unfollow: (usersId: number) => { dispatch(unfollowAC(usersId)) },\r\n//         setUsers: (users: UsersOfSearchType) => { dispatch(setUserAC(users)) },\r\n//         setCurrentPage: (currentPage: number) => { dispatch(setCurrentPageAC(currentPage)) },\r\n//         setTotalCount: (totalUsersCount: number) => { dispatch(setTotalCountAC(totalUsersCount)) },\r\n//         toggleIsFetching: (isFetching: boolean) => { dispatch(toggleIsFetchingAC(isFetching)) }\r\n\r\n//     }\r\n// };\r\n\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    // followSuccess,\r\n    // unfollowSuccess,\r\n    //setUsers,\r\n    setCurrentPage,\r\n    // setTotalCount,\r\n    // toggleIsFetching,\r\n    toggleIsFollowingProgress,\r\n    //?--thunk\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unFollowThunkCreator,\r\n\r\n\r\n})(UsersAPiComponent);","E:\\it-kamasutra\\Social-Network\\src\\components\\Dialogs\\DialogItems\\DialogItem.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Profile\\ProfileContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\common\\Preloader\\Preloader.tsx",["137"],"import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/preloader.svg'\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}","E:\\it-kamasutra\\Social-Network\\src\\redux\\authReducer.ts",[],"E:\\it-kamasutra\\Social-Network\\src\\components\\Header\\HeaderContainer.tsx",[],"E:\\it-kamasutra\\Social-Network\\src\\api\\api.ts",[],{"ruleId":"138","severity":1,"message":"139","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"138","severity":1,"message":"148","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"149","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":95,"column":23,"nodeType":"152","messageId":"153","endLine":97,"endColumn":6},{"ruleId":"154","severity":1,"message":"155","line":204,"column":42,"nodeType":"156","messageId":"157","endLine":204,"endColumn":44},{"ruleId":"154","severity":1,"message":"155","line":218,"column":42,"nodeType":"156","messageId":"157","endLine":218,"endColumn":44},{"ruleId":"138","severity":1,"message":"148","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"158","line":5,"column":5,"nodeType":"140","messageId":"141","endLine":5,"endColumn":18},{"ruleId":"138","severity":1,"message":"159","line":5,"column":36,"nodeType":"140","messageId":"141","endLine":5,"endColumn":49},{"ruleId":"138","severity":1,"message":"160","line":5,"column":51,"nodeType":"140","messageId":"141","endLine":5,"endColumn":59},{"ruleId":"138","severity":1,"message":"161","line":5,"column":61,"nodeType":"140","messageId":"141","endLine":5,"endColumn":77},{"ruleId":"138","severity":1,"message":"162","line":5,"column":79,"nodeType":"140","messageId":"141","endLine":5,"endColumn":94},{"ruleId":"138","severity":1,"message":"149","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":8,"column":13,"nodeType":"165","endLine":8,"endColumn":36},"@typescript-eslint/no-unused-vars","'prof' is defined but never used.","Identifier","unusedVar","no-native-reassign",["166"],"no-negated-in-lhs",["167"],["166"],["167"],"'axios' is defined but never used.","'usersAPI' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'followSuccess' is defined but never used.","'setTotalCount' is defined but never used.","'setUsers' is defined but never used.","'toggleIsFetching' is defined but never used.","'unfollowSuccess' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]